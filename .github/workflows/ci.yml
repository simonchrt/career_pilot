name: Rails CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: career_pilot_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/career_pilot_test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2" # Modifiez selon votre version de Ruby
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Node dependencies
        run: yarn install

      - name: Compile assets
        run: |
          bundle exec rails assets:precompile
          bundle exec rails tailwindcss:build

      - name: Run tests
        run: bundle exec rspec

      # Optionnel: Linting avec Rubocop
      - name: Run Rubocop
        run: bundle exec rubocop
        continue-on-error: true # Ne fait pas échouer le pipeline si le linting échoue
